<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/assets/**" location="/resources/assets/"/>
	<resources mapping="/css/**" location="/resources/css/"/>
	<resources mapping="/img/**" location="/resources/img/"/>
	<resources mapping="/js/**" location="/resources/js/"/>
	<resources mapping="/editor/**" location="/resources/js/editor/"/>
	<resources mapping="/layerslider/**" location="/resources/layerslider/"/>
	<resources mapping="/vendor/**" location="/resources/vendor/"/>
	<resources mapping="/video/**" location="/resources/video/"/>
	<resources mapping="/resources/**" location="/resources/"/>

	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"/>
	</beans:bean>
<!-- admin -->	
	<!-- dateFormat을 지원하기 위한 스프링 빈 생성-->
	<beans:bean class="java.text.SimpleDateFormat" id="underBarDateFormat">
		<beans:constructor-arg name="pattern" value="yyyy-MM-dd"/>
	</beans:bean>
	<beans:bean class="java.text.SimpleDateFormat" id="AdminTableNowDateFormat">
		<beans:constructor-arg name="pattern" value="yyyy년 MM월 dd일 hh:mm:ss"/>
	</beans:bean>
	<beans:bean class="java.text.SimpleDateFormat" id="slashDateFormat">
		<beans:constructor-arg name="pattern" value="yy/MM/dd"/>
	</beans:bean>
	<beans:bean class="java.text.SimpleDateFormat" id="slashYearMonthFormat">
		<beans:constructor-arg name="pattern" value="yy/MM"/>
	</beans:bean>
	
	<!-- json parsing을 위한 객체 -->
	<beans:bean class="com.fasterxml.jackson.databind.ObjectMapper" id="jacksonMapper" />
	
	<!-- visited site -->
	<beans:bean class="org.springframework.core.io.ClassPathResource" id="visitedsiteResource">
		<beans:constructor-arg name="path" value="META-INF/visited-site.properties"/>
	</beans:bean>
	<beans:bean class="java.util.Properties" id="visitedsiteProp" />
	
	<!-- sns site -->
	<beans:bean class="org.springframework.core.io.ClassPathResource" id="snsResource">
		<beans:constructor-arg name="path" value="META-INF/sns.properties"/>
	</beans:bean>
	<beans:bean class="java.util.Properties" id="snsProp" />
<!-- /admin -->
	
	
		
	<context:component-scan base-package="site.yolowa.controller"/>
	<context:component-scan base-package="site.yolowa.dao"/>
	<context:component-scan base-package="site.yolowa.service"/>
	<context:component-scan base-package="site.yolowa.utils"/>
	
</beans:beans>







