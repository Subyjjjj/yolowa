package site.yolowa.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import site.yolowa.dto.MainMessage;
import site.yolowa.dto.MainMessageCount;
import site.yolowa.dto.Member;
import site.yolowa.service.MainHostingService;
import site.yolowa.service.MainMessageService;

//호스팅과 관련된 검색, 상세, 리뷰 컨트롤러
@Controller
public class MainServiceController {
	
	@Autowired
	private MainHostingService mainHostingService;
	
	@Autowired
	private MainMessageService mainMessageService;
	
	//메인페이지
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String main(Model model) {
		model.addAttribute("searchIndexSuperhost", mainHostingService.HostingSearchSuperhost());
		model.addAttribute("searchIndexLately", mainHostingService.HostingSearchIndexLately());
		model.addAttribute("searchIndexFamous", mainHostingService.HostingSearchFamous());
		model.addAttribute("searchCounting", mainHostingService.HostingSearchCounting());
		return "main";
	}
	
	//회사 소개 페이지
	@RequestMapping(value = "/about", method = RequestMethod.GET)
	public String about() {
		return "main/about";
	}
	
	//호스팅 디테일
	@RequestMapping(value = "/detail", method = RequestMethod.GET)
	public String detail(@RequestParam String hostingNo, Model model) {
		model.addAttribute("hostingDetail", mainHostingService.selectMainHostingDetail(Integer.parseInt(hostingNo)));
		return "main/hosting-detail";
	}
	
	//그리드 서치
	@RequestMapping(value = "/gridsearch", method = RequestMethod.GET)
	public String gridSearch() {
		return "main/hosting-grid-search";
	}
	
	//리스트 서치
	@RequestMapping(value = "/listsearch", method = RequestMethod.GET)
	public String listSearch() {
		return "main/hosting-list-search";
	}
	
	//숙소 예약 1단계
	@RequestMapping(value = "/order1", method = RequestMethod.GET)
	public String order1() {
		return "main/order-1";
	}
	
	//숙소 예약 2단계
	@RequestMapping(value = "/order2", method = RequestMethod.GET)
	public String order2() {
		return "main/order2";
	}
	
	//푸터 contacts 
	@RequestMapping(value = "/contacts", method = RequestMethod.GET)
	public String contacts() {
		return "main/contacts";
	}
	
	//메인 페이지의 헤더 공지사항 결과를 반환하기 위한 메소드
	@ModelAttribute("headerNotice")
	public List<MainMessage> getNoticeHeaderList(HttpSession session) {
		if(session.getAttribute("loginMember") == null) {
			return null;
		}
		Member member = (Member)session.getAttribute("loginMember");
		return mainMessageService.getMessageNoticeList(member.getMemberNo());
	}
	
	//메인 페이지의 헤더 메세지 결과를 반환하기 위한 메소드
	@ModelAttribute("headerMessage")
	public List<MainMessage> getMessageHeaderList(HttpSession session) {
		if(session.getAttribute("loginMember") == null) {
			return null;
		}
		Member member = (Member)session.getAttribute("loginMember");
		return mainMessageService.getMessageHeaderList(member.getMemberNo());
	}
	
	//메인 페이지의 새로 도착한 메세지 카운팅
	@ModelAttribute("headerMessageCount")
	public MainMessageCount getMessageHeaderCount(HttpSession session) {
		if(session.getAttribute("loginMember") == null) {
			return null;
		}
		Member member = (Member)session.getAttribute("loginMember");
		return mainMessageService.getCountingMessageHeader(member.getMemberNo());
	}
}
