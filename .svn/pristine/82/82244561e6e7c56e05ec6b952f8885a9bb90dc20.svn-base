package site.yolowa.service;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;

import site.yolowa.dao.BoardDAO;
import site.yolowa.dto.Board;
import site.yolowa.dto.Sns;


@Service
public class AdminEtcServiceImpl implements AdminEtcService{
	@Autowired
	private BoardDAO boardDAO;
	
	@Autowired
	@Qualifier("snsResource")
	private Resource snsResource;
	
	@Autowired
	@Qualifier("snsProp")
	private Properties snsProp;
	

	@Override
	public List<Board> getAllBoard(Map<String, Object> map) {
		return boardDAO.selectAllBoard(map);
	}

	@Override
	public void addAdminBoardNotice(Board board) {
		boardDAO.insertAdminBoardNotice(board);
	}

	@Override
	public void modifyAdminBoardNotice(Board board) {
		boardDAO.updateAdminBoardNotice(board);
	}

	@Override
	public List<Board> getAdminBoardNoticeCategoryTC(Map<String, Object> map) {
		return boardDAO.selectAdminBoardNoticeCategoryTC(map);
	}
	
	@Override
	public List<Board> getAdminEtcBoard(Map<String, Object> map) {
		return boardDAO.selectAdminEtcBoard(map);
	}
	
	@Override
	public List<Board> getAdminEtcHelp(Map<String, Object> map) {
		return boardDAO.selectAdminEtcHelp(map);
	}
	
	
	
//--------------------------------------------------------------
	@Override
	public Sns getAdminSns(HttpServletRequest request) throws IOException {
		Sns sns = new Sns();
		//¸Ê ¼¼ÆÃ
		//snsProp.load(snsResource.getInputStream());
		System.out.println(request.getServletContext().getRealPath("/WEB-INF/spring/sns.properties"));
		snsProp.load(new FileInputStream(new File(request.getServletContext().getRealPath("/WEB-INF/spring/sns.properties"))));
		sns.setBlog(snsProp.getProperty("blog"));
		sns.setTwitter(snsProp.getProperty("twitter"));
		sns.setFacebook(snsProp.getProperty("facebook"));
		sns.setInstagram(snsProp.getProperty("instagram"));
		//
			
		return sns;
	}
	
	@SuppressWarnings("deprecation")
	@Override
	public boolean modifySns(Sns sns, HttpServletRequest request) throws IOException {
		//snsProp.load(snsResource.getInputStream());
		snsProp.load(new FileInputStream(new File(request.getServletContext().getRealPath("/WEB-INF/spring/sns.properties"))));
		if(sns.getBlog() != null) {
			snsProp.setProperty("blog", sns.getBlog());
		}
		if(sns.getTwitter() != null) {
			snsProp.setProperty("twitter", sns.getTwitter());
		}
		if(sns.getFacebook() != null) {
			snsProp.setProperty("facebook", sns.getFacebook());
		}
		if(sns.getInstagram() != null) {
			snsProp.setProperty("instagram", sns.getInstagram());
		}
		
		try {
			snsProp.save(new FileOutputStream(new File(request.getServletContext().getRealPath("/WEB-INF/spring/sns.properties"))), "");
		}catch (IOException e) {
			return false; 
		}
		return true;
	}
	
}
